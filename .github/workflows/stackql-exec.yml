name: 'StackQL Exec Test'

on:
  push:
    branches:
    - main
  pull_request:
jobs:
  stackql-exec-google-example:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}
    name: 'StackQL exec Google '

    steps: 
    - name: Checkout
      uses: actions/checkout@v3

    #
    # query no auth
    #
    - name: pull providers
      id: stackql-exec-string-noauth
      uses: ./
      with:
        is_command: true
        query: "REGISTRY PULL github;
                REGISTRY PULL google;"

    #
    # authenticated query 
    #
    - name: exec github example with query string
      id: stackql-exec-string
      uses: ./
      with:
        query: "select total_private_repos
                from github.orgs.orgs
                where org = 'stackql';"
      env: 
        STACKQL_GITHUB_USERNAME: ${{  secrets.STACKQL_GITHUB_USERNAME }}
        STACKQL_GITHUB_PASSWORD: ${{  secrets.STACKQL_GITHUB_PASSWORD }}

    #
    # query_file_path
    #
    - name: exec google example with query file
      id: stackql-exec-file
      uses: ./
      with:
        query_file_path: './stackql_scripts/google-instances-by-status.iql'
      env: 
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    #
    # query_file_path with jsonnet code block using external vars
    #
    - name: exec google example with query file using vars
      id: stackql-exec-file-with-vars
      uses: ./
      with:
        query_file_path: './stackql_scripts/google-instances-by-status-with-inline-jsonnet-block.iql'
        vars: GOOGLE_PROJECT=${{ env.GOOGLE_PROJECT }},GOOGLE_ZONE=${{ env.GOOGLE_ZONE }}
      env: 
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
        GOOGLE_ZONE: ${{ vars.GOOGLE_ZONE }}

    #
    # query_file_path with jsonnet data file using external vars
    #
    - name: exec google example with query file and data file using vars
      id: stackql-exec-file-with-data-file-and-vars
      uses: ./
      with:
        query_file_path: './stackql_scripts/google-instances-by-status-with-external-data-file.iql'
        data_file_path: './stackql_scripts/google-instances-by-status-with-external-data-file.jsonnet'
        vars: GOOGLE_PROJECT=${{ env.GOOGLE_PROJECT }},GOOGLE_ZONE=${{ env.GOOGLE_ZONE }}
      env: 
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
        GOOGLE_ZONE: ${{ vars.GOOGLE_ZONE }}        

    - name: validate stackql-exec output
      shell: bash
      run: |
        if [ -z '${{ steps.stackql-exec-string-noauth.outputs.exec-result }}' ]; then
          echo "exec-stackql output does not contain expected result"
          exit 1
        fi
        if [ -z '${{ steps.stackql-exec-string.outputs.exec-result }}' ]; then
          echo "exec-stackql output does not contain expected result"
          exit 1
        fi
        if [ -z '${{ steps.stackql-exec-file.outputs.exec-result }}' ]; then
          echo "exec-stackql output does not contain expected result"
          exit 1
        fi
        if [ -z '${{ steps.stackql-exec-file-with-vars.outputs.exec-result }}' ]; then
          echo "exec-stackql output does not contain expected result"
          exit 1
        fi
        if [ -z '${{ steps.stackql-exec-file-with-data-file-and-vars.outputs.exec-result }}' ]; then
          echo "exec-stackql output does not contain expected result"
          exit 1
        fi